import { useState, memo } from "react";

const SearchFilters = memo(({ 
  searchTerm, 
  onSearchChange, 
  filters, 
  onFiltersChange,
  onResetFilters,
  productsCount
}) => {
  const [isFiltersOpen, setIsFiltersOpen] = useState(false);

  const handleFilterChange = (key, value) => {
    onFiltersChange({ ...filters, [key]: value });
  };

  return (
    <div className="search-filters">
      <div className="search-bar">
        <input
          type="text"
          placeholder="ะะพะธัะบ ะณะธัะฐั, ััะธะปะธัะตะปะตะน, ะฐะบัะตัััะฐัะพะฒ..."
          value={searchTerm}
          onChange={(e) => onSearchChange(e.target.value)}
          className="search-input"
        />
        <button 
          onClick={() => setIsFiltersOpen(!isFiltersOpen)}
          className="filters-toggle"
        >
          ๐๏ธ {isFiltersOpen ? 'ะกะบัััั' : 'ะะพะบะฐะทะฐัั'} ัะธะปัััั
        </button>
      </div>

      {isFiltersOpen && (
        <div className="filters-panel">
          <div className="filter-group">
            <label>ะะฐัะตะณะพัะธั:</label>
            <select
              value={filters.category}
              onChange={(e) => handleFilterChange('category', e.target.value)}
            >
              <option value="">ะัะต ะบะฐัะตะณะพัะธะธ</option>
              <option value="guitar">๐ธ ะะธัะฐัั</option>
              <option value="bass">๐ธ ะะฐั-ะณะธัะฐัั</option>
              <option value="amplifier">๐ ะฃัะธะปะธัะตะปะธ</option>
              <option value="pick">๐ต ะะตะดะธะฐัะพัั</option>
              <option value="strings">๐ป ะกัััะฝั</option>
              <option value="accessories">๐ ะะบัะตัััะฐัั</option>
            </select>
          </div>

          <div className="price-filters">
            <div className="filter-group">
              <label>ะฆะตะฝะฐ ะพั:</label>
              <input
                type="number"
                placeholder="0"
                value={filters.minPrice}
                onChange={(e) => handleFilterChange('minPrice', e.target.value)}
              />
            </div>

            <div className="filter-group">
              <label>ะฆะตะฝะฐ ะดะพ:</label>
              <input
                type="number"
                placeholder="10000"
                value={filters.maxPrice}
                onChange={(e) => handleFilterChange('maxPrice', e.target.value)}
              />
            </div>
          </div>

          <button onClick={onResetFilters} className="reset-filters">
            ๐๏ธ ะกะฑัะพัะธัั ัะธะปัััั
          </button>
        </div>
      )}

      <div className="search-stats">
        ๐ ะะฐะนะดะตะฝะพ ัะพะฒะฐัะพะฒ: {productsCount}
      </div>
    </div>
  );
});

export default SearchFilters;